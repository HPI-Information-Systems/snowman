openapi: 3.0.0
info:
  contact:
    email: snowman@groups.sap.com
    url: https://github.com/HPI-Information-Systems/snowman
  description: |
    _This document describes the REST API of the snowman data matching benchmark tool._ Comparing data matching algorithms is still an unsolved topic in both industry and research.  With snowman, developers and researchers will be able to compare the performance of different data matching  solutions or improve new algorithms.
  license:
    name: LICENSE (MIT)
    url: https://github.com/HPI-Information-Systems/snowman/blob/main/LICENSE
  title: Snowman API
  version: 1.0.0
servers:
  - url: "{protocol}://{server}/api/v1"
    variables:
      protocol:
        default: http
        enum:
          - http
          - https
      server:
        default: localhost:8123
tags:
  - description: Operations about algorithms
    name: Algorithm
  - description: Operations about datasets
    name: Datasets
  - description: Operations about experiments
    name: Experiments
  - description: Operations about similarity thresholds of experiments
    name: Similarity Thresholds
  - description: Operations about comparing multiple experiments
    name: Benchmark
paths:
  /algorithms:
    get:
      operationId: getAlgorithms
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Algorithm"
                type: array
          description: OK
      summary: Get all algorithms
      tags:
        - Algorithm
      x-eov-operation-handler: controllers/AlgorithmController
    post:
      operationId: addAlgorithm
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlgorithmValues"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlgorithmId"
          description: Created
        "400":
          description: Bad Request
      summary: Creates a new algorithm
      tags:
        - Algorithm
      x-codegen-request-body-name: algorithm
      x-eov-operation-handler: controllers/AlgorithmController
  /algorithms/{algorithmId}:
    delete:
      operationId: deleteAlgorithm
      parameters:
        - explode: false
          in: path
          name: algorithmId
          required: true
          schema:
            $ref: "#/components/schemas/AlgorithmId"
          style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes an algorithm by id
      tags:
        - Algorithm
      x-eov-operation-handler: controllers/AlgorithmController
    get:
      operationId: getAlgorithm
      parameters:
        - explode: false
          in: path
          name: algorithmId
          required: true
          schema:
            $ref: "#/components/schemas/AlgorithmId"
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Algorithm"
          description: OK
        "404":
          description: Not Found
      summary: Gets an algorithm by id
      tags:
        - Algorithm
      x-eov-operation-handler: controllers/AlgorithmController
    put:
      operationId: setAlgorithm
      parameters:
        - explode: false
          in: path
          name: algorithmId
          required: true
          schema:
            $ref: "#/components/schemas/AlgorithmId"
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlgorithmValues"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Updates or creates an algorithm
      tags:
        - Algorithm
      x-codegen-request-body-name: algorithm
      x-eov-operation-handler: controllers/AlgorithmController
  /datasets:
    get:
      operationId: getDatasets
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Dataset"
                type: array
          description: OK
      summary: Returns all Datasets
      tags:
        - Datasets
      x-eov-operation-handler: controllers/DatasetsController
    post:
      operationId: addDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetValues"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetId"
          description: Created
        "400":
          description: Bad Request
      summary: Creates a new dataset with metainformation
      tags:
        - Datasets
      x-codegen-request-body-name: dataset
      x-eov-operation-handler: controllers/DatasetsController
  /datasets/{datasetId}:
    delete:
      operationId: deleteDataset
      parameters:
        - explode: false
          in: path
          name: datasetId
          required: true
          schema:
            $ref: "#/components/schemas/DatasetId"
          style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes a whole dataset by id
      tags:
        - Datasets
      x-eov-operation-handler: controllers/DatasetsController
    get:
      operationId: getDataset
      parameters:
        - explode: false
          in: path
          name: datasetId
          required: true
          schema:
            $ref: "#/components/schemas/DatasetId"
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
          description: OK
        "404":
          description: Not Found
      summary: Gets dataset by id
      tags:
        - Datasets
      x-eov-operation-handler: controllers/DatasetsController
    put:
      operationId: setDataset
      parameters:
        - explode: false
          in: path
          name: datasetId
          required: true
          schema:
            $ref: "#/components/schemas/DatasetId"
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatasetValues"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Updates or creates a dataset
      tags:
        - Datasets
      x-codegen-request-body-name: dataset
      x-eov-operation-handler: controllers/DatasetsController
  /datasets/{datasetId}/file:
    delete:
      operationId: deleteDatasetFile
      parameters:
        - explode: false
          in: path
          name: datasetId
          required: true
          schema:
            $ref: "#/components/schemas/DatasetId"
          style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes a dataset file (but not the dataset)
      tags:
        - Datasets
      x-eov-operation-handler: controllers/DatasetsController
    get:
      description:
        Always returns one row with column names followed by the requested
        amount of rows. To only return the column names, pass startAt=0 and limit=0.
      operationId: getDatasetFile
      parameters:
        - explode: false
          in: path
          name: datasetId
          required: true
          schema:
            $ref: "#/components/schemas/DatasetId"
          style: simple
        - explode: true
          in: query
          name: startAt
          required: false
          schema:
            default: 0
            type: integer
          style: form
        - description: -1 returns all remaining records
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: -1
            type: integer
          style: form
        - description:
            startAt and limit can be used without specifying sortBy (guarantees
            same order of records even if not specified)
          explode: true
          in: query
          name: sortBy
          required: false
          schema:
            example: first_name
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileResponse"
          description: OK
        "404":
          description: Not Found
      summary: Gets a dataset file by id
      tags:
        - Datasets
      x-eov-operation-handler: controllers/DatasetsController
    put:
      operationId: setDatasetFile
      parameters:
        - explode: false
          in: path
          name: datasetId
          required: true
          schema:
            $ref: "#/components/schemas/DatasetId"
          style: simple
        - description: The name of the alphanumeric id column in the uploaded dataset.
          explode: true
          in: query
          name: idColumn
          required: true
          schema:
            example: id
            type: string
          style: form
        - explode: true
          in: query
          name: quote
          required: true
          schema:
            example: '"'
            type: string
          style: form
        - explode: true
          in: query
          name: escape
          required: true
          schema:
            example: "'"
            type: string
          style: form
        - explode: true
          in: query
          name: separator
          required: true
          schema:
            example: ","
            type: string
          style: form
      requestBody:
        content:
          text/csv:
            schema:
              $ref: "#/components/schemas/CSVFile"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Updates or creates a dataset file
      tags:
        - Datasets
      x-codegen-request-body-name: file
      x-eov-operation-handler: controllers/DatasetsController
  /experiments:
    get:
      operationId: getExperiments
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Experiment"
                type: array
          description: OK
      summary: Get all experiments
      tags:
        - Experiments
      x-eov-operation-handler: controllers/ExperimentsController
    post:
      operationId: addExperiment
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentValues"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentId"
          description: Created
        "400":
          description: Bad Request
      summary: Creates a new Experiment
      tags:
        - Experiments
      x-codegen-request-body-name: experiment
      x-eov-operation-handler: controllers/ExperimentsController
  /experiments/{experimentId}:
    delete:
      operationId: deleteExperiment
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes an experiment (including experiment file)
      tags:
        - Experiments
      x-eov-operation-handler: controllers/ExperimentsController
    get:
      operationId: getExperiment
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Experiment"
          description: OK
        "404":
          description: Not Found
      summary: Gets experiment by id
      tags:
        - Experiments
      x-eov-operation-handler: controllers/ExperimentsController
    put:
      operationId: setExperiment
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExperimentValues"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Updates or creates an Experiment
      tags:
        - Experiments
      x-codegen-request-body-name: experiment
      x-eov-operation-handler: controllers/ExperimentsController
  /experiments/{experimentId}/file:
    delete:
      operationId: deleteExperimentFile
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes an experiment file
      tags:
        - Experiments
      x-eov-operation-handler: controllers/ExperimentsController
    get:
      operationId: getExperimentFile
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
        - explode: true
          in: query
          name: startAt
          required: false
          schema:
            default: 0
            type: integer
          style: form
        - description: -1 returns all remaining records
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: -1
            type: integer
          style: form
        - description:
            startAt and limit can be used without specifying sortBy (guarantees
            same order of records even if not specified)
          explode: true
          in: query
          name: sortBy
          required: false
          schema:
            example: first_name
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileResponse"
          description: OK
        "404":
          description: Not Found
      summary: Get an experiment file
      tags:
        - Experiments
      x-eov-operation-handler: controllers/ExperimentsController
    put:
      operationId: setExperimentFile
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
        - description: "Documentation on the formats can be found here: https://hpi-information-systems.github.io/snowman/basic_usage/experiments/#import-formats"
          explode: true
          in: query
          name: format
          required: true
          schema:
            enum:
              - magellan
              - clusterER
              - pilot
              - sigmod2021
              - BHANA
              - BPIES
            type: string
          style: form
      requestBody:
        content:
          text/csv:
            schema:
              $ref: "#/components/schemas/CSVFile"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Updates or creates an experiment file
      tags:
        - Experiments
      x-codegen-request-body-name: file
      x-eov-operation-handler: controllers/ExperimentsController
  /experiments/{experimentId}/similarity-threshold-functions:
    get:
      operationId: getSimilarityThresholdFunctions
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SimilarityThresholdFunction"
                type: array
          description: OK
        "404":
          description: Not Found
      summary: Get all similarity threshold functions of an experiment
      tags:
        - Similarity Thresholds
      x-eov-operation-handler: controllers/SimilarityThresholdsController
    post:
      operationId: addSimilarityThresholdFunction
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimilarityThresholdFunctionValues"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimilarityThresholdId"
          description: Created
        "400":
          description: Bad Request
      summary: Creates a new similarity threshold function
      tags:
        - Similarity Thresholds
      x-codegen-request-body-name: similarityThresholdFunction
      x-eov-operation-handler: controllers/SimilarityThresholdsController
  /experiments/{experimentId}/similarity-threshold-functions/{functionId}:
    delete:
      operationId: deleteSimilarityThresholdFunction
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
        - explode: false
          in: path
          name: functionId
          required: true
          schema:
            $ref: "#/components/schemas/SimilarityThresholdId"
          style: simple
      responses:
        "204":
          description: No Content
      summary: Deletes a similarity threshold function
      tags:
        - Similarity Thresholds
      x-eov-operation-handler: controllers/SimilarityThresholdsController
    get:
      operationId: getSimilarityThresholdFunction
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
        - explode: false
          in: path
          name: functionId
          required: true
          schema:
            $ref: "#/components/schemas/SimilarityThresholdId"
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimilarityThresholdFunction"
          description: OK
        "404":
          description: Not Found
      summary: Get a similarity threshold function
      tags:
        - Similarity Thresholds
      x-eov-operation-handler: controllers/SimilarityThresholdsController
    put:
      operationId: setSimilarityThresholdFunction
      parameters:
        - explode: false
          in: path
          name: experimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: simple
        - explode: false
          in: path
          name: functionId
          required: true
          schema:
            $ref: "#/components/schemas/SimilarityThresholdId"
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimilarityThresholdFunctionValues"
        required: true
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
      summary: Updates or creates a similarity threshold function
      tags:
        - Similarity Thresholds
      x-codegen-request-body-name: similarityThresholdFunction
      x-eov-operation-handler: controllers/SimilarityThresholdsController
  /benchmark/metrics:
    get:
      operationId: getBinaryMetrics
      parameters:
        - explode: true
          in: query
          name: groundTruthExperimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: form
        - explode: true
          in: query
          name: predictedExperimentId
          required: true
          schema:
            $ref: "#/components/schemas/ExperimentId"
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Metric"
                type: array
          description: OK
        "404":
          description: Not Found
      summary: Compares two experiments and returns binary metrics
      tags:
        - Benchmark
      x-eov-operation-handler: controllers/BenchmarkController
  /benchmark/experiment-intersection/records:
    post:
      operationId: calculateExperimentIntersectionRecords
      parameters:
        - explode: true
          in: query
          name: startAt
          required: false
          schema:
            default: 0
            type: integer
          style: form
        - description: -1 returns all remaining records
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: -1
            type: integer
          style: form
      requestBody:
        $ref: "#/components/requestBodies/ExperimentIntersection"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileResponse"
          description: OK
        "404":
          description: Not Found
      summary:
        intersects multiple experiments and returns the resulting records.
        This can be used to calculate the confusion-matrix.
      tags:
        - Benchmark
      x-codegen-request-body-name: intersection
      x-eov-operation-handler: controllers/BenchmarkController
  /benchmark/experiment-intersection/count:
    post:
      operationId: calculateExperimentIntersectionCount
      requestBody:
        $ref: "#/components/requestBodies/ExperimentIntersection"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExperimentIntersectionCount"
          description: OK
        "404":
          description: Not Found
      summary:
        Intersects multiple experiments and returns the count of pairs and
        the count of rows. This can be used to calculate the confusion-matrix.
      tags:
        - Benchmark
      x-codegen-request-body-name: intersection
      x-eov-operation-handler: controllers/BenchmarkController
  /benchmark/experiment-intersection/counts:
    post:
      description:
        Returns the pair and row counts of all possible intersections of
        the given experiments.
      operationId: calculateExperimentIntersectionCounts
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: "#/components/schemas/ExperimentId"
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ExperimentIntersectionCount"
                type: array
          description: OK
        "404":
          description: Not Found
      tags:
        - Benchmark
      x-codegen-request-body-name: experiments
      x-eov-operation-handler: controllers/BenchmarkController
components:
  requestBodies:
    ExperimentIntersection:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ExperimentIntersection"
      required: true
  schemas:
    AlgorithmId:
      example: 1
      type: integer
    AlgorithmValues:
      example:
        softKPIs:
          timeToInstall: 3
          matchingSolutionType: ml
          implementationKnowHowLevel: starter
          timeToConfigure: 1
        name: Magellan
        description: This is an open source python library
      properties:
        name:
          example: Magellan
          minLength: 1
          type: string
        description:
          example: This is an open source python library
          type: string
        softKPIs:
          $ref: "#/components/schemas/AlgorithmValues_softKPIs"
      required:
        - name
      type: object
    Algorithm:
      allOf:
        - $ref: "#/components/schemas/Algorithm_allOf"
        - $ref: "#/components/schemas/AlgorithmValues"
    DatasetId:
      example: 1
      type: integer
    DatasetValues:
      example:
        numberOfRecords: 500
        name: Dataset1
        description: This is a dataset file about Restaurants.
        tags:
          - restaurants
          - restaurants
      properties:
        name:
          example: Dataset1
          minLength: 1
          type: string
        description:
          example: This is a dataset file about Restaurants.
          type: string
        numberOfRecords:
          example: 500
          type: integer
        tags:
          items:
            example: restaurants
            type: string
          type: array
      required:
        - name
      type: object
    Dataset:
      allOf:
        - $ref: "#/components/schemas/Dataset_allOf"
        - $ref: "#/components/schemas/DatasetValues"
    ExperimentId:
      example: 1
      type: integer
    ExperimentValues:
      example:
        softKPIs:
          timeToConfigure: 1
        name: Experiment1
        description: This is an experiment using a fancy algorithm
        datasetId: 1
        algorithmId: 1
      properties:
        name:
          example: Experiment1
          minLength: 1
          type: string
        description:
          example: This is an experiment using a fancy algorithm
          type: string
        datasetId:
          example: 1
          type: integer
        algorithmId:
          example: 1
          type: integer
        softKPIs:
          $ref: "#/components/schemas/ExperimentValues_softKPIs"
      required:
        - algorithmId
        - datasetId
        - name
      type: object
    Experiment:
      allOf:
        - $ref: "#/components/schemas/Experiment_allOf"
        - $ref: "#/components/schemas/ExperimentValues"
    SimilarityThresholdId:
      type: integer
    SimilarityThreshold:
      type: string
    SimilarityThresholdOperator:
      example:
        operator: ADD
      properties:
        left:
          $ref: "#/components/schemas/SimilarityThresholdFunctionValues"
        right:
          $ref: "#/components/schemas/SimilarityThresholdFunctionValues"
        operator:
          enum:
            - ADD
            - SUBTRACT
            - MULTIPLY
            - DIVIDE
          type: string
      required:
        - left
        - operator
        - right
      type: object
    SimilarityThresholdFunctionValues:
      example:
        similarityThreshold: similarityThreshold
        type: SimilarityThreshold
        operator:
          operator: ADD
      properties:
        type:
          enum:
            - SimilarityThreshold
            - Operator
          type: string
        similarityThreshold:
          type: string
        operator:
          $ref: "#/components/schemas/SimilarityThresholdOperator"
      required:
        - type
      type: object
    SimilarityThresholdFunction:
      allOf:
        - $ref: "#/components/schemas/SimilarityThresholdFunction_allOf"
        - $ref: "#/components/schemas/SimilarityThresholdFunctionValues"
    Metric:
      example:
        name: precision
        formula: \frac{truePositives}{truePositives + falsePositives}
        range:
          - 0
          - 1
        value: 0.75
        info: The meaningfulness of the f1 score is debated in the research community.
        infoLink: https://link.springer.com/article/10.1007/s11222-017-9746-6
      properties:
        name:
          example: precision
          type: string
        formula:
          example: \frac{truePositives}{truePositives + falsePositives}
          type: string
        info:
          example: The meaningfulness of the f1 score is debated in the research community.
          type: string
        infoLink:
          example: https://link.springer.com/article/10.1007/s11222-017-9746-6
          type: string
        value:
          example: 0.75
          type: number
        range:
          example:
            - 0
            - 1
          items:
            type: number
          maxItems: 2
          minItems: 2
          type: array
      required:
        - formula
        - name
        - range
        - value
      type: object
    ExperimentIntersectionItem:
      example:
        predictedCondition: true
        experimentId: 1
      properties:
        experimentId:
          example: 1
          type: integer
        predictedCondition:
          type: boolean
      required:
        - experimentId
        - predictedCondition
      type: object
    ExperimentIntersection:
      items:
        $ref: "#/components/schemas/ExperimentIntersectionItem"
      type: array
    ExperimentIntersectionCount:
      example:
        experiments:
          - predictedCondition: true
            experimentId: 1
          - predictedCondition: true
            experimentId: 1
        numberRows: 5
        numberPairs: 10
      properties:
        numberRows:
          example: 5
          type: integer
        numberPairs:
          example: 10
          type: integer
        experiments:
          items:
            $ref: "#/components/schemas/ExperimentIntersectionItem"
          type: array
      required:
        - experiments
        - numberPairs
        - numberRows
      type: object
    CSVFile:
      format: binary
      type: string
    FileResponse:
      example:
        data:
          - - "1"
            - test value 1
            - test value 2
          - - "2"
            - test value 1
            - test value 2
          - []
          - - "3"
            - other
            - group
        header:
          - id
          - testColumn1
          - testColumn2
      properties:
        header:
          example:
            - id
            - testColumn1
            - testColumn2
          items:
            type: string
          type: array
        data:
          example:
            - - "1"
              - test value 1
              - test value 2
            - - "2"
              - test value 1
              - test value 2
            - []
            - - "3"
              - other
              - group
          items:
            example:
              - "1"
              - test value 1
              - test value 2
            items:
              type: string
            type: array
          type: array
      required:
        - data
        - header
      type: object
    AlgorithmValues_softKPIs:
      example:
        timeToInstall: 3
        matchingSolutionType: ml
        implementationKnowHowLevel: starter
        timeToConfigure: 1
      properties:
        implementationKnowHowLevel:
          enum:
            - starter
            - intermediate
            - expert
          type: string
        matchingSolutionType:
          enum:
            - ml
            - rulebased
            - other
          type: string
        timeToInstall:
          example: 3
          type: number
        timeToConfigure:
          example: 1
          type: number
      type: object
    Algorithm_allOf:
      properties:
        id:
          example: 1
          type: integer
      required:
        - id
      type: object
    Dataset_allOf:
      properties:
        id:
          example: 1
          type: integer
        numberOfUploadedRecords:
          example: 2005
          type: integer
      required:
        - id
      type: object
    ExperimentValues_softKPIs:
      example:
        timeToConfigure: 1
      properties:
        timeToConfigure:
          example: 1
          type: number
      type: object
    Experiment_allOf:
      properties:
        id:
          example: 1
          type: integer
        numberOfUploadedRecords:
          example: 2005
          type: integer
      required:
        - id
      type: object
    SimilarityThresholdFunction_allOf:
      properties:
        id:
          type: integer
      required:
        - id
      type: object
