name: Release

on:
  push:
    tags:
      - '**'

jobs:
  package:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Select platform(s)
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Run (root) npm install
        run: npm ci
        working-directory: ./
      - name: Run (app) npm install
        run: npm ci
        working-directory: ./app
      - name: Run (wrapper) npm install
        run: npm ci
        working-directory: ./wrapper
      - name: Release stack
        run: npm run release
        working-directory: ./
      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v2
        with:
          name: snowman-win.zip
          path: ./wrapper/build/*.zip
        if: matrix.os == 'windows-latest'
      - name: Upload artifact (MacOS)
        uses: actions/upload-artifact@v2
        with:
          name: snowman.dmg
          path: ./wrapper/build/*.dmg
        if: matrix.os == 'macos-latest'
      - name: Upload artifact (Linux)
        uses: actions/upload-artifact@v2
        with:
          name: snowman-lnx.zip
          path: ./wrapper/build/*.zip
        if: matrix.os == 'ubuntu-latest'
  release:
    needs:
      - package
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact (MacOS)
        uses: actions/download-artifact@v2
        with:
          name: snowman.dmg
          path: /home/runner/snowman.dmg
      - name: Download artifact (Windows)
        uses: actions/download-artifact@v2
        with:
          name: snowman-win.zip
          path: /home/runner/snowman-win.zip
      - name: Download artifact (Linux)
        uses: actions/download-artifact@v2
        with:
          name: snowman-lnx.zip
          path: /home/runner/snowman-lnx.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: (to be designated)
          draft: true
          prerelease: false
      - name: Upload release asset (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/snowman.dmg
          asset_name: snowman.dmg
          asset_content_type: application/octet-stream
      - name: Upload release asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/snowman-win.zip
          asset_name: snowman-win.zip
          asset_content_type: application/zip
      - name: Upload release asset (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /home/runner/snowman-lnx.zip
          asset_name: snowman-lnx.zip
          asset_content_type: application/zip