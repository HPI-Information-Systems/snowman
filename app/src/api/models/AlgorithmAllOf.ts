/* tslint:disable */
/* eslint-disable */
/**
 * Snowman API
 * _This document describes the REST API of the snowman data matching benchmark tool._ Comparing data matching algorithms is still an unsolved topic in both industry and research.  With snowman, developers and researchers will be able to compare the performance of different data matching  solutions or improve new algorithms. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: snowman@groups.sap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Metric,
    MetricFromJSON,
    MetricFromJSONTyped,
    MetricToJSON,
} from './';

/**
 * 
 * @export
 * @interface AlgorithmAllOf
 */
export interface AlgorithmAllOf {
    /**
     * 
     * @type {number}
     * @memberof AlgorithmAllOf
     */
    id: number;
    /**
     * 
     * @type {Array<Metric>}
     * @memberof AlgorithmAllOf
     */
    matchingSolutionEffort?: Array<Metric>;
    /**
     * 
     * @type {Array<Metric>}
     * @memberof AlgorithmAllOf
     */
    domainEffort?: Array<Metric>;
}

export function AlgorithmAllOfFromJSON(json: any): AlgorithmAllOf {
    return AlgorithmAllOfFromJSONTyped(json, false);
}

export function AlgorithmAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlgorithmAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'matchingSolutionEffort': !exists(json, 'matchingSolutionEffort') ? undefined : ((json['matchingSolutionEffort'] as Array<any>).map(MetricFromJSON)),
        'domainEffort': !exists(json, 'domainEffort') ? undefined : ((json['domainEffort'] as Array<any>).map(MetricFromJSON)),
    };
}

export function AlgorithmAllOfToJSON(value?: AlgorithmAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'matchingSolutionEffort': value.matchingSolutionEffort === undefined ? undefined : ((value.matchingSolutionEffort as Array<any>).map(MetricToJSON)),
        'domainEffort': value.domainEffort === undefined ? undefined : ((value.domainEffort as Array<any>).map(MetricToJSON)),
    };
}


