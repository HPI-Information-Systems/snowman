/* tslint:disable */
/* eslint-disable */
/**
 * Snowman API
 * _This document describes the REST API of the snowman data matching benchmark tool._ Comparing data matching algorithms is still an unsolved topic in both industry and research.  With snowman, developers and researchers will be able to compare the performance of different data matching  solutions or improve new algorithms. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: snowman@groups.sap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SimilarityThresholdFunctionAllOf,
    SimilarityThresholdFunctionAllOfFromJSON,
    SimilarityThresholdFunctionAllOfFromJSONTyped,
    SimilarityThresholdFunctionAllOfToJSON,
    SimilarityThresholdFunctionOperator,
    SimilarityThresholdFunctionOperatorFromJSON,
    SimilarityThresholdFunctionOperatorFromJSONTyped,
    SimilarityThresholdFunctionOperatorToJSON,
    SimilarityThresholdFunctionUnaryOperator,
    SimilarityThresholdFunctionUnaryOperatorFromJSON,
    SimilarityThresholdFunctionUnaryOperatorFromJSONTyped,
    SimilarityThresholdFunctionUnaryOperatorToJSON,
    SimilarityThresholdFunctionValues,
    SimilarityThresholdFunctionValuesFromJSON,
    SimilarityThresholdFunctionValuesFromJSONTyped,
    SimilarityThresholdFunctionValuesToJSON,
} from './';

/**
 * 
 * @export
 * @interface SimilarityThresholdFunction
 */
export interface SimilarityThresholdFunction {
    /**
     * 
     * @type {number}
     * @memberof SimilarityThresholdFunction
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof SimilarityThresholdFunction
     */
    type: SimilarityThresholdFunctionTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof SimilarityThresholdFunction
     */
    similarityThreshold?: string;
    /**
     * 
     * @type {SimilarityThresholdFunctionOperator}
     * @memberof SimilarityThresholdFunction
     */
    operator?: SimilarityThresholdFunctionOperator;
    /**
     * 
     * @type {number}
     * @memberof SimilarityThresholdFunction
     */
    constant?: number;
    /**
     * 
     * @type {SimilarityThresholdFunctionUnaryOperator}
     * @memberof SimilarityThresholdFunction
     */
     unaryOperator?: SimilarityThresholdFunctionUnaryOperator;
    }
    
    /**
    * @export
    * @enum {string}
    */
    export enum SimilarityThresholdFunctionTypeEnum {
        SimilarityThreshold = 'SimilarityThreshold',
        Operator = 'Operator',
        Constant = 'Constant',
        UnaryOperator = 'UnaryOperator'
    }

export function SimilarityThresholdFunctionFromJSON(json: any): SimilarityThresholdFunction {
    return SimilarityThresholdFunctionFromJSONTyped(json, false);
}

export function SimilarityThresholdFunctionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SimilarityThresholdFunction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'similarityThreshold': !exists(json, 'similarityThreshold') ? undefined : json['similarityThreshold'],
        'operator': !exists(json, 'operator') ? undefined : SimilarityThresholdFunctionOperatorFromJSON(json['operator']),
        'constant': !exists(json, 'constant') ? undefined : json['constant'],
        'unaryOperator': !exists(json, 'unaryOperator') ? undefined : SimilarityThresholdFunctionUnaryOperatorFromJSON(json['unaryOperator']),
    };
}

export function SimilarityThresholdFunctionToJSON(value?: SimilarityThresholdFunction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'similarityThreshold': value.similarityThreshold,
        'operator': SimilarityThresholdFunctionOperatorToJSON(value.operator),
        'constant': value.constant,
        'unaryOperator': SimilarityThresholdFunctionUnaryOperatorToJSON(value.unaryOperator),
    };
}


